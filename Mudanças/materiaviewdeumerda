import SwiftUI
import SwiftData

struct EditarMateriaView: View {
    @Environment(\.dismiss) var dismiss
    @Environment(\.modelContext) private var modelContext

    @Bindable var materia: Materia

    @State private var mostrarAlertaNomeVazio = false

    var body: some View {
        Form {
            Section(header: Text("Nome")) {
                TextField("Nome", text: $materia.nome)
            }

            Section(header: Text("Cor (hex ou nome)")) {
                TextField("Cor", text: Binding(
                    get: { materia.cor ?? "" },
                    set: { materia.cor = $0 }
                ))
            }
        }
        .navigationTitle("Editar Matéria")
        .toolbar {
            ToolbarItem(placement: .confirmationAction) {
                Button("Salvar") {
                    if materia.nome.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty {
                        mostrarAlertaNomeVazio = true
                    } else {
                        do {
                            try modelContext.save()
                            dismiss()
                        } catch {
                            print("Erro ao salvar matéria: \(error)")
                        }
                    }
                }
            }

            ToolbarItem(placement: .cancellationAction) {
                Button("Cancelar") {
                    dismiss()
                }
            }
        }
        .alert("O nome da matéria não pode ficar vazio.", isPresented: $mostrarAlertaNomeVazio) {
            Button("OK", role: .cancel) { }
        }
    }
}
